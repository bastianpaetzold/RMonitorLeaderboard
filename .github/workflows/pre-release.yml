name: Build pre-release
on:
  push:
    branches: [ develop ]

jobs:
  build-on-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      project-version: ${{ steps.get-project-version.outputs.project-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: temurin
        cache: maven
    - name: Patch legacy libs
      working-directory: ./build/
      run: ./patch-legacy-libs.sh
    - name: Package
      run: mvn package -B
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts-linux
        path: |
           target/leaderboard-*.jar
           target/leaderboard-*-app-image.zip
           target/rmonitorleaderboard_*.deb
    - name: Get project version
      id: get-project-version
      run: echo "project-version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

  build-on-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: temurin
        cache: maven
    - name: Patch legacy libs
      working-directory: ./build/
      run: ./patch-legacy-libs.bat
    - name: Package
      run: mvn package -B
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts-windows
        path: |
           target/leaderboard-*-app-image.zip
           target/RMonitorLeaderboard-*.msi

  build-on-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: temurin
        cache: maven
    - name: Patch legacy libs
      working-directory: ./build/
      run: ./patch-legacy-libs.sh
    - name: Package
      run: mvn package -B
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts-macos
        path: |
           target/leaderboard-*-app-image.zip
           target/RMonitorLeaderboard-*.dmg
  
  build-container-image:
    name: Build and publish container image
    runs-on: ubuntu-latest
    needs:
    - build-on-ubuntu
    permissions:
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifacts-linux
    - name: Unzip app-image
      run: unzip -q leaderboard-*-app-image.zip -d container/RMonitorLeaderboard/
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm,arm64
    - name: Log in to the container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: bastianpaetzold
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push container image
      uses: docker/build-push-action@v4
      with:
        context: container
        platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
        push: true
        tags: ghcr.io/bastianpaetzold/rmonitorleaderboard:latest-dev

  publish-pre-release:
    name: Publish pre-release
    runs-on: ubuntu-latest
    needs:
    - build-on-ubuntu
    - build-on-windows
    - build-on-macos
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Rename files
      env:
        PROJECT_VERSION: ${{ needs.build-on-ubuntu.outputs.project-version }}
      run: |
        mv artifacts-linux/leaderboard-*.jar artifacts-linux/rmonitorleaderboard_${PROJECT_VERSION}.jar
        mv artifacts-linux/leaderboard-*-app-image.zip artifacts-linux/rmonitorleaderboard_${PROJECT_VERSION}_linux.zip
        mv artifacts-linux/rmonitorleaderboard_*.deb artifacts-linux/rmonitorleaderboard_${PROJECT_VERSION}_linux.deb
        mv artifacts-windows/leaderboard-*-app-image.zip artifacts-windows/rmonitorleaderboard_${PROJECT_VERSION}_windows.zip
        mv artifacts-windows/RMonitorLeaderboard-*.msi artifacts-windows/rmonitorleaderboard_${PROJECT_VERSION}_windows.msi
        mv artifacts-macos/leaderboard-*-app-image.zip artifacts-macos/rmonitorleaderboard_${PROJECT_VERSION}_mac.zip
        mv artifacts-macos/RMonitorLeaderboard-*.dmg artifacts-macos/rmonitorleaderboard_${PROJECT_VERSION}_mac.dmg
    - name: Delete latest-dev tag
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.git.deleteRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "tags/latest-dev"
          }).catch(e => console.log("The latest-dev tag couldn't be deleted: " + e))
    - name: Create pre-release
      uses: ncipollo/release-action@v1
      with:
        tag: latest-dev
        commit: ${{ github.sha }}
        artifacts: artifacts-*/*
        makeLatest: false
        name: Latest Development Build
        prerelease: true
        allowUpdates: true
        removeArtifacts: true
